#include <Arduino.h>
#include <BLEDevice.h>
#include <BLEUtils.h>
#include <BLEScan.h>
#include <BLEClient.h>
#include <BLEAdvertisedDevice.h>

BLEClient* pClient; // BLE-Client für die Verbindung

class MyAdvertisedDeviceCallbacks: public BLEAdvertisedDeviceCallbacks {
    void onResult(BLEAdvertisedDevice advertisedDevice) {
      // Überprüfe, ob das gefundene Gerät die MAC-Adresse der Fernbedienung hat
      if (advertisedDevice.getAddress().toString() == "5c:dc:15:18:e2:f4") {  // Beispiel MAC-Adresse
        Serial.println("Fire TV Stick Fernbedienung gefunden!");
        
        // Verbindung herstellen
        pClient = BLEDevice::createClient();
        Serial.println("Verbinde...");
        pClient->connect(&advertisedDevice);  // Verbindung mit dem Gerät herstellen
        
        if (pClient->isConnected()) {
          Serial.println("Erfolgreich verbunden!");
          
          // GATT-Services durchsuchen
          BLERemoteService* pRemoteService = pClient->getService(BLEUUID("00001812-0000-1000-8000-00805f9b34fb"));
          if (pRemoteService != nullptr) {
            Serial.println("Fernbedienungsservice gefunden!");
            // Weitere Interaktionen mit der Fernbedienung hier
          } else {
            Serial.println("Fernbedienungsservice nicht gefunden.");
          }
        } else {
          Serial.println("Verbindung fehlgeschlagen.");
        }
      }
    }
};

void setup() {
  Serial.begin(115200);
  BLEDevice::init("");
  
  // BLE-Scanner initialisieren und Scan-Callback setzen
  BLEScan* pBLEScan = BLEDevice::getScan();
  pBLEScan->setAdvertisedDeviceCallbacks(new MyAdvertisedDeviceCallbacks());
  pBLEScan->setActiveScan(true);  // Aktiviertes Scannen für mehr Details
  pBLEScan->start(30);  // Scan für 30 Sekunden starten
}

void loop() {
  // ESP32 bleibt im Scan-Modus, bis die Fernbedienung gefunden wird
}
